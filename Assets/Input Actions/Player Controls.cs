//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.4.4
//     from Assets/Input Actions/Player Controls.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerControls : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerControls()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""Player Controls"",
    ""maps"": [
        {
            ""name"": ""Player"",
            ""id"": ""f27580ca-f773-4587-bfc7-dec45f015f03"",
            ""actions"": [
                {
                    ""name"": ""Left Lane 1"",
                    ""type"": ""Button"",
                    ""id"": ""e46f013e-acd3-4c1a-a2f3-68c8c79fd4c4"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Left Lane 2"",
                    ""type"": ""Button"",
                    ""id"": ""2ba8c886-95c6-469f-9eaa-4c620d6c3ff6"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Left Lane 3"",
                    ""type"": ""Button"",
                    ""id"": ""dbdc0083-a114-4b0b-9b49-5608db3ef26e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Middle Lane"",
                    ""type"": ""Button"",
                    ""id"": ""8512dc08-e3b6-455e-abf0-9423742f9706"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Right Lane 1"",
                    ""type"": ""Button"",
                    ""id"": ""49e7f03c-48e7-4ef0-8718-4f40a794a344"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Right Lane 2"",
                    ""type"": ""Button"",
                    ""id"": ""f9efbb8e-765b-4578-8093-f8caac599219"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Right Lane 3"",
                    ""type"": ""Button"",
                    ""id"": ""2d10bae2-3237-4424-bb80-80484a21aedc"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Pause"",
                    ""type"": ""Button"",
                    ""id"": ""2dba054f-ee69-4f26-ae1d-6aa624298212"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Touch"",
                    ""type"": ""Value"",
                    ""id"": ""6a4cb29e-e708-4ec7-94ea-738798e2cb80"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""e9df9d12-0597-4cd6-b956-173e8a071d7a"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Left Lane 1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5eecdb10-2b1c-4d0a-9ed8-e4e7f2a7385f"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Left Lane 2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1cf1575a-5a9c-42fe-a3e2-31db1de7a38c"",
                    ""path"": ""<Keyboard>/f"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Left Lane 3"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""167b2ebf-0d2b-4817-a9f0-48e338b5e0bf"",
                    ""path"": ""<Keyboard>/j"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Right Lane 1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8a64e146-bbca-4422-b633-1875b72f2e86"",
                    ""path"": ""<Keyboard>/k"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Right Lane 2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b0086d84-62e0-4a0d-b28e-d17dd655a453"",
                    ""path"": ""<Keyboard>/l"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Right Lane 3"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2a1fea70-101f-4272-aad8-fbd1a550e70f"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Middle Lane"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e165d9da-1727-4e4f-9328-4308b53f0418"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Pause"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""938d1d31-a27e-40f4-9cc0-f359a6f83b26"",
                    ""path"": ""<Touchscreen>/touch*/Press"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Touch"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Player
        m_Player = asset.FindActionMap("Player", throwIfNotFound: true);
        m_Player_LeftLane1 = m_Player.FindAction("Left Lane 1", throwIfNotFound: true);
        m_Player_LeftLane2 = m_Player.FindAction("Left Lane 2", throwIfNotFound: true);
        m_Player_LeftLane3 = m_Player.FindAction("Left Lane 3", throwIfNotFound: true);
        m_Player_MiddleLane = m_Player.FindAction("Middle Lane", throwIfNotFound: true);
        m_Player_RightLane1 = m_Player.FindAction("Right Lane 1", throwIfNotFound: true);
        m_Player_RightLane2 = m_Player.FindAction("Right Lane 2", throwIfNotFound: true);
        m_Player_RightLane3 = m_Player.FindAction("Right Lane 3", throwIfNotFound: true);
        m_Player_Pause = m_Player.FindAction("Pause", throwIfNotFound: true);
        m_Player_Touch = m_Player.FindAction("Touch", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Player
    private readonly InputActionMap m_Player;
    private IPlayerActions m_PlayerActionsCallbackInterface;
    private readonly InputAction m_Player_LeftLane1;
    private readonly InputAction m_Player_LeftLane2;
    private readonly InputAction m_Player_LeftLane3;
    private readonly InputAction m_Player_MiddleLane;
    private readonly InputAction m_Player_RightLane1;
    private readonly InputAction m_Player_RightLane2;
    private readonly InputAction m_Player_RightLane3;
    private readonly InputAction m_Player_Pause;
    private readonly InputAction m_Player_Touch;
    public struct PlayerActions
    {
        private @PlayerControls m_Wrapper;
        public PlayerActions(@PlayerControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @LeftLane1 => m_Wrapper.m_Player_LeftLane1;
        public InputAction @LeftLane2 => m_Wrapper.m_Player_LeftLane2;
        public InputAction @LeftLane3 => m_Wrapper.m_Player_LeftLane3;
        public InputAction @MiddleLane => m_Wrapper.m_Player_MiddleLane;
        public InputAction @RightLane1 => m_Wrapper.m_Player_RightLane1;
        public InputAction @RightLane2 => m_Wrapper.m_Player_RightLane2;
        public InputAction @RightLane3 => m_Wrapper.m_Player_RightLane3;
        public InputAction @Pause => m_Wrapper.m_Player_Pause;
        public InputAction @Touch => m_Wrapper.m_Player_Touch;
        public InputActionMap Get() { return m_Wrapper.m_Player; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlayerActions set) { return set.Get(); }
        public void SetCallbacks(IPlayerActions instance)
        {
            if (m_Wrapper.m_PlayerActionsCallbackInterface != null)
            {
                @LeftLane1.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnLeftLane1;
                @LeftLane1.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnLeftLane1;
                @LeftLane1.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnLeftLane1;
                @LeftLane2.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnLeftLane2;
                @LeftLane2.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnLeftLane2;
                @LeftLane2.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnLeftLane2;
                @LeftLane3.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnLeftLane3;
                @LeftLane3.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnLeftLane3;
                @LeftLane3.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnLeftLane3;
                @MiddleLane.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnMiddleLane;
                @MiddleLane.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnMiddleLane;
                @MiddleLane.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnMiddleLane;
                @RightLane1.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnRightLane1;
                @RightLane1.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnRightLane1;
                @RightLane1.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnRightLane1;
                @RightLane2.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnRightLane2;
                @RightLane2.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnRightLane2;
                @RightLane2.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnRightLane2;
                @RightLane3.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnRightLane3;
                @RightLane3.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnRightLane3;
                @RightLane3.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnRightLane3;
                @Pause.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnPause;
                @Pause.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnPause;
                @Pause.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnPause;
                @Touch.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnTouch;
                @Touch.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnTouch;
                @Touch.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnTouch;
            }
            m_Wrapper.m_PlayerActionsCallbackInterface = instance;
            if (instance != null)
            {
                @LeftLane1.started += instance.OnLeftLane1;
                @LeftLane1.performed += instance.OnLeftLane1;
                @LeftLane1.canceled += instance.OnLeftLane1;
                @LeftLane2.started += instance.OnLeftLane2;
                @LeftLane2.performed += instance.OnLeftLane2;
                @LeftLane2.canceled += instance.OnLeftLane2;
                @LeftLane3.started += instance.OnLeftLane3;
                @LeftLane3.performed += instance.OnLeftLane3;
                @LeftLane3.canceled += instance.OnLeftLane3;
                @MiddleLane.started += instance.OnMiddleLane;
                @MiddleLane.performed += instance.OnMiddleLane;
                @MiddleLane.canceled += instance.OnMiddleLane;
                @RightLane1.started += instance.OnRightLane1;
                @RightLane1.performed += instance.OnRightLane1;
                @RightLane1.canceled += instance.OnRightLane1;
                @RightLane2.started += instance.OnRightLane2;
                @RightLane2.performed += instance.OnRightLane2;
                @RightLane2.canceled += instance.OnRightLane2;
                @RightLane3.started += instance.OnRightLane3;
                @RightLane3.performed += instance.OnRightLane3;
                @RightLane3.canceled += instance.OnRightLane3;
                @Pause.started += instance.OnPause;
                @Pause.performed += instance.OnPause;
                @Pause.canceled += instance.OnPause;
                @Touch.started += instance.OnTouch;
                @Touch.performed += instance.OnTouch;
                @Touch.canceled += instance.OnTouch;
            }
        }
    }
    public PlayerActions @Player => new PlayerActions(this);
    public interface IPlayerActions
    {
        void OnLeftLane1(InputAction.CallbackContext context);
        void OnLeftLane2(InputAction.CallbackContext context);
        void OnLeftLane3(InputAction.CallbackContext context);
        void OnMiddleLane(InputAction.CallbackContext context);
        void OnRightLane1(InputAction.CallbackContext context);
        void OnRightLane2(InputAction.CallbackContext context);
        void OnRightLane3(InputAction.CallbackContext context);
        void OnPause(InputAction.CallbackContext context);
        void OnTouch(InputAction.CallbackContext context);
    }
}
